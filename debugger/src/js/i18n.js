import globalData from './globalData'

const i18n = function (language,cb) {
    var cn = {
            //--common--//
            'control':'控制',
            'local':'本地',
            'remote':'远程',
            '_lang': 'cn',
            'lang': 'Language',
            'title': 'Cassia 蓝牙调试工具',
            'header': 'Cassia 蓝牙调试工具',
            'reboot': '重启',
            'allApi': '总览API',
            'sm':'扫描',
            'sb':'设备',
            'lj':'连接',
            'unpair':'取消配对',
            'ylj':'已连接',
            'fx':'发现',
            'sb-fw':'设备服务',
            'fw':' ',
            'connDeviceLog':'连接设备',
            'connedDeviceLog':'已连接设备',
            'writeComLog':'写入指令',
            'readComLog':'读取指令',
            'advertiseStartLog': '开启广播',
            'advertiseStopLog': '停止广播',
            'openHub':'打开Gateway',
            'notify':'通知',
            'connDevice': '连接设备',
            'connedDevice': '已连接设备',
            // 'connectedNum':'已连接数量: ',
            'discoverServices': '发现设备服务',
            'openNotify': '打开网关通知',
            'stateChange': '连接状态变化',
            'scanDevice': '扫描设备',
            'writeCom': '写入指令',
            'readCom': '读取指令',
            'advertiseStart': '开启广播',
            'advertiseStop': '停止广播',
            'cassiaInfo': '网关信息',
            // 'stateChangeNotify': '连接状态变化通知',
            'dk':'打开',
            'router':'网关通知',
            'tz':' ',
            'zt':'状态变化',
            'bh':' ',
            'ljj':'连接',
            'stop': '停止',
            'start': '开始',
            'advertise': '广播',
            'xr':'写入指令',
            'zl':' ',
            'router-mac':'网关 Mac',
            'router-ip':'网关 Ip',
            'disCon': '断开连接',
            'getCond':'已连接',
            'scanList': '扫描列表',
            'startScan': '开始扫描',
            'devcieAndService': '设备及服务列表',
            // 'Pair':'配对',
            // 'Unpair':'取消配对',
            // 'Seri':'服务',
            // 'Disc':'断连',
            // 'getList': '获取已连接设备',
            'co-st':'连接状态',
            'ch-no':'变化通知',
            'notifyList': '通知列表',
            // 'openHubNotify': '打开网关通知',
            'clearList': '清空此列表',
            'apiSocket': 'API接口',
            'scanResult': '扫描结果',
            'pair_input':'写入配对码',
            'disService': '发现服务',
            'getMsg': '接收设备信息',
            'firstCode':'请先进行配对',
            'deviceConStateChange': '设备连接转态变化',
            'arguments': '参数',
            'optional': '(选填)',
            'required': '(必填)',
            'description': '描述',
            'pairInput':'写入配对码',
            'hubNotifyStatus': '网关通知状态',
            'method': '方法名',
            'addMore': '加载更多',
            'username':'开发者账号:',
            'password':'密码:',
            'host':'AC 地址:',
            'yes':'是',
            'input':'输入',
            'close':'关闭',
            'pleaseCode':'请输入配对码',
            'pair':'配对',
            'cond':'已连接',
            'num':'数量:',
            'interfaceURL':'<b>接口URL：</b>调用接口后，此URL会自动生成在下面的”API接口”的窗口中。',
            'oAouh-Tip-p2':'<b>接口描述：</b>此接口是通过oAuth2.0认证实现云端远程控制。将用户名和密码以base64编码的方式添加在请求参数中，认证成功后获得1小时有效期的access_token,你可以添加参数access_token访问其他API，从而实现远程控制。',
            'oAouh-Tip-p3':'<b>参数解释：用户名/密码：</b>从Cassia请求的开发者账户和密码(会以base64编码的方式添加在请求中)。',
            'oAouh-Tip-p4':'<b>AC Address：</b>和蓝牙网关交互的服务器地址。请包含HTTP或HTTPS，否则默认使用HTTP。',
            'connectList-Tip-p2': '<b>接口描述：</b>此接口是GET请求，调用接口后，蓝牙网关会将目前连接的设备的列表返回到pc端。',
            'connect-Tip-p1': '<b>chip：</b>蓝牙网关共有两个芯片，芯片0和芯片1，在调用接口时可以通过添加queryString来选择芯片(?chip=0或者?chip=1)，每个芯片的连接上限是11个设备，如果不填此参数，蓝牙网关会根据连接数量自动匹配芯片。',
            'connect-Tip-p2': '<b>deviceMac：</b>要连接的设备的MAC地址。',
            'pair-Tip-p2': '<b>deviceMac：</b>要配对的设备的MAC地址。',
            'connect-Tip-p3': '<b>type：</b>此参数在body中，是必填项。蓝牙设备的MAC地址分为random和public两种，所以在连接设备时，需要指出设备的广播type，广播type可以从扫描数据中获取。',
            'unpair-Tip-p2': '<b>接口描述：</b>此接口是DELETE请求，调用接口后，蓝牙网关会与指定MAC地址的蓝牙设备取消配对。</p>',
            'unpair-Tip-p3': '<b>>参数解释：deviceMac：</b>要取消配对的设备的MAC地址。</p>',
            'disconn-Tip-p2': '<b>接口描述：</b>此接口是DELETE请求，调用接口后，蓝牙网关会与指定MAC地址的蓝牙设备断连。</p>',
            'disconn-Tip-p3': '<b>参数解释：deviceMac：</b>要断连的设备的MAC地址。</p>',
            'services-Tip-p1': '<b>接口描述：</b>此接口是GET请求，调用接口后，蓝牙网关会向指定的蓝牙设备请求其服务的树形列表，调用次接口的主要目的是为对蓝牙设备进行读写操作时，获取蓝牙设备的characteristic所对应的valueHandle或者handle。',
            'services-Tip-p2': '<b>参数解释：deviceMac：</b>要请求服务列表的设备的MAC地址。',
            'notify-Tip-p1': '<b>接口描述：</b>此接口是sse长链接，当打开蓝牙设备的notification/indication后，蓝牙设备会将消息上报到蓝牙网关，但是如果在pc上希望接收到此消息，还需要调用此接口来建立蓝牙网关到pc端的数据通路，这样蓝牙网关才会将收到的蓝牙设备的数据转发到pc端。',
            'notify-Tip-p2': '<b>SSE：</b>server-sent events，简称：see。是一种http的长链接，请求需要手动关闭，否则理论上在不报错的情况下会一直进行，每条数据会以“data: ” 开头。在调试中可以直接将sse的url输入在浏览器中进行调用。但是在编程中使用一般的http请求无法请求到数据(一般的http请求都是在请求结束后返回所有的数据)，我们目前提供了iOS/java/nodejs/js/c#等的demo来实现sse的调用，如果在这方面遇到困难可以参考。另外，当调用sse时，最好对该长链接进行监控，以便在长链接出现错误或意外停止后进行重启，或者其他操作。',
            'connState-Tip-p1': '<b>接口描述：</b>此接口是sse长链接，当蓝牙网关上的蓝牙设备的连接状态发生改变时（连接成功或者发生断连），会通过此接口将消息通知到pc端。',
            'scan-Tip-p1': '<b>接口描述：</b>此接口是sse长链接调用接口后，蓝牙网关会扫描周边的设备,并将蓝牙设备的MAC地址(bdaddr)、广播type（bdaddrType）、广播报数据（adData/scanData）、设备名称（name）、信号强度（rssi）等信息以http response的形式返回（原始数据见“http response”窗口。',
            'scan-Tip-p2': '<b> 参数解释：chip：</b>蓝牙网关共有两个芯片，芯片0和芯片1，在调用接口时可以通过添加queryString来选择芯片(?chip=0或者?chip=1)，如果不填,会默认用芯片0扫描，芯片0扫描距离会优于芯片1，也建议一般情况下使用芯片0扫描。',
            'write-Tip-p1': '<b>接口描述：</b>本接口是负责与设备通讯的主要接口，具体负责向蓝牙设备写入指令以及打开蓝牙设备的notification/indication，下面会具体讲解两个功能分别如何实现。',
            'write-Tip-p2': '<b>1、对蓝牙设备写入指令：</b>当需要往蓝牙设备指定的characteristic写入指令时，先调用“发现服务”的接口，当返回蓝牙设备服务信息的树形列表后，寻找指定的characteristic所对应的valueHandle（characteristic内包含handle、valueHandle、properties、descriptors等属性），然后调用此接口时，handle对应的值是characteristic的valueHandle，value对应的值是需要写入的指令内容（将指令的每个byte顺序拼在一起写成一个字符串）。',
            'write-Tip-p3': '<b>2、打开蓝牙设备的notification/indication：</b>当需要接收蓝牙设备发来的数据时，需要先打开蓝牙设备的notification或者indication（打开的过程在本质上也是对蓝牙设备下发的一个指令），当需要打开指定characteristic的notification或者indication时，也是先调用“发现服务”的方法，找到指定的characteristic所对应的descriptors，打开descriptors，找到uuid包含“00002902”所对应的handle，然后调用此接口，接口中的handle就是上面descriptor的handle，如果是打开notification，value对应的是“0100”，如果是打开indication，value对应的是“0200”，如果是关闭notification/indication，value对应的是“0000”。',
            'write-Tip-p4': '<b>参数解释： deviceMac：</b>要写入指令的设备的MAC地址。',
            'write-Tip-p5': '<b>handle：</b>通过“发现服务接口”所找到的characteristic所对应的valueHandle或者handle。',
            'write-Tip-p6': '<b>value：</b>要写入的指令的值，或者“0100”（打开notification）、“0200”（打开indication）、“0000”（关闭notification和indication）。',
            'write-Tip-p7': ' <b>handle & value输入格式</b>',
            'write-Tip-p8': '单条指令格式 handle:value1,type',
            'write-Tip-p9': 'handle为要写入的handle如20',
            'write-Tip-p10': 'value1 为要写入的值（十六进制）',
            'write-Tip-p11': 'type为写入类型，0代表write without response，1代表write with response',
            'write-Tip-p12': '多条语句之间用回车键换行',
            'wiki': 'SDK指南',
            'new-version': '新版(Beta)',
            'adType': '广播类型:',
            'adData': '广播数据:',
            'adRespData': '扫描数据:',
            'adChannelmap': '广播信道:',
            'adInterval': '广播间隔:',
            'chip': '芯片'
        },
        en = {
            'control':'Control',
            'local':'Local',
            'remote':'Remote',
            '_lang': 'en',
            'lang': '语言',
            'title': 'Cassia Bluetooth Debug Tool',
            'header': 'Cassia Bluetooth Debug  Tool',
            'reboot': 'Reboot',
            'allApi': 'API Info',
            'firstCode':'Please pair first',
            'sm':'Scan',
            'sb':'Device',
            'lj':'Connect',
            'unpair':'Unpair',
            'pairInput':'Pair Input',
            'pair':'Pair',
            'Pair':'Pair',
            'Unpair':'Unpair',
            'Seri':'Services',
            'Disc':'Disconnect',
            'pair_input':'Pair_input',
            'ylj':'Connected',
            'fx':'Discover',
            'fw':'Services',
            'sb-fw':'Device',
            'connDeviceLog':'Connect Device',
            'connedDeviceLog':'Connected Devices',
            'writeComLog':'Write Instruction',
            'readComLog':'Read Instruction',
            'advertiseStartLog': 'Start Advertise',
            'advertiseStopLog': 'Stop Advertise',
            'router-mac':'Gateway MAC',
            'router-ip':'Gateway Ip',
            'openHub':'Open Gateway',
            'notify':'Notification',
            'connDevice': 'Connect Device',
            'connedDevice': 'Connected Devices',
            // 'connectedNum':'connected number: ',
            'scanDevice': 'Scan\rDevice',
            'openNotify': 'Open Gateway Notify',
            'stateChange': 'Connection State Changes',
            'writeCom': 'Write Instruction',
            'readCom': 'Read Instruction',
            'advertiseStart': 'Start Advertise',
            'advertiseStop': 'Stop Advertise',
            'cassiaInfo': 'Gateway Info',
            // 'stateChangeNotify': 'Connection State Changes Notify',
            'discoverServices': 'Discover Device Services',
            'dk':'Open',
            'router':'Gateway',
            'tz':'Notify',
            'xr':'Write',
            'zl':'Instruction',
            'ljj':'Connection',
            'stop': 'Stop',
            'start': 'Start',
            'advertise': 'Advertise',
            'zt':'State',
            'bh':'Changes',
            'getCond':'Connected',
            'disCon': 'Disconnect',
            'scanList': 'Scan List',
            'startScan': 'Start Scan',
            'devcieAndService': 'Device and Services List',
            // 'getList': 'Connected Devices',
            'co-st':'Connection State',
            'ch-no':'Notification',
            'notifyList': 'Notify List',
            // 'openHubNotify': 'Open Gateway Notify',
            'clearList': 'Clear List',
            'apiSocket': 'Api Interfaces',
            'scanResult': 'Scan Results',
            'disService': 'Discover Services',
            'getMsg': 'Devices\'s Messages',
            'deviceConStateChange': 'State Changes',
            'arguments': 'Parameter',
            'optional': '(optional)',
            'required': '(Required)',
            'description': 'Description',
            'hubNotifyStatus': 'Gateway Notify Status',
            'method': 'Method',
            'addMore': 'Add More',
            'username':'Developer Key:',
            'password':'Developer Secret:',
            'pleaseCode':'Please enter the pair code',
            'host':'AC Server Address:',
            'yes':'yes',
            'input':'import',
            'close':'close',
            'cond':'Connected',
            'num':'Number:',
            'interfaceURL':'<b>Interface URL:</b>calling the interface, this URL is suyomatically generated in the window below "API Interface".',
            'oAouh-Tip-p2':'<b>Interface Description:</b>This interface is achieved through oAuth2.0 cloud remote control. The developer key and developer secret to base64 encoding added in the request parameters, access to 1hour after the successful authentication access_token, you can add parameters access_token access other API, in order to achieve remote control.',
            'oAouh-Tip-p3':'<b>Parameter Explanation:Developer Key / Developer Secret:</b>Developer credential requested from Cassia (will be added as a base64 encoding in the request).',
            'oAouh-Tip-p4':'<b>AC Address: </b>The address of the AC Server that interacts with the Bluetooth gateway. Please include HTTP or HTTPS, otherwise HTTP will be used by default.',
            'connectList-Tip-p2': '<b>Interface Description:</b>This interface is a GET request. After calling the interface, the Bluetooth gateway will return the list of currently connected devices to the PC side.',
            'connect-Tip-p1': '<b>chip：</b>There are two chips in the Bluetooth gateway, the chip 0 and the chip 1, when calling the interface, you can select the chip (? chip = 0 or? chip = 1) by adding queryString and the connection ceiling of each chip is 20 devices for E1000 gateway. Without this parameter, the Bluetooth gateway automatically matches the chip according to the number of connections.',
            'connect-Tip-p2': '<b>deviceMac：</b>MAC address of the device to connect to.',
            'pair-Tip-p2': '<b>deviceMac：</b>MAC address of the device to pair to.',
            'connect-Tip-p3': `<b>type：</b>This parameter is required in the body. The MAC addresses of Bluetooth devices are divided into random and public, so when connecting devices, you need to indicate the device's broadcast type, it can be obtained from the scan data.`,
            'disconn-Tip-p2': '<b>Interface Description:</b>After calling the interface, the Bluetooth gateway will be disconnected from the Bluetooth device with the specified MAC address.</p>',
            'disconn-Tip-p3': '<b>Parameter Explanation: deviceMac:</b> MAC address of the device to be disconnected. </p>',
            'unpair-Tip-p2': '<b>Interface Description:</b>After calling the interface, the Bluetooth gateway will be unpaired from the Bluetooth device with the specified MAC address.</p>',
            'unpair-Tip-p3': '<b>Parameter Explanation: deviceMac:</b> MAC address of the device to be unpaired. </p>',
            'services-Tip-p1': `<b>Interface Description: </b>This interface is a GET request. After the interface is called, the Bluetooth gateway will request the specified Bluetooth device for the tree list of its service. The main purpose of calling the secondary interface is to obtain the Bluetooth device's read / value corresponding to the valueHandle or handle.`,
            'services-Tip-p2': '<b>Parameter Explanation: deviceMac:</b>MAC address of the device on which the service list is to be requested.',
            'notify-Tip-p1': '<b>Interface Description: </b>This interface is sse long link, when you open the notification / indication Bluetooth device, the Bluetooth device will report the message to the Bluetooth gateway, but if you want to receive this message on the pc, you also need to call this interface to establish a Bluetooth gateway Data path to the pc end, so that the Bluetooth gateway will receive the data of the Bluetooth device is forwarded to the pc side.',
            'notify-Tip-p2': '<b>SSE：</b>server-sent events，Short: see Is a long link http, the request needs to be manually shut down, or in theory, no error will continue, each data will be "data:" at the beginning. Debugging can be directly input sse url in the browser to call. But in the process of using ordinary HTTP requests can not request data (the general http request is returned after the request all the data), we currently provide a demo of iOS / java / nodejs / js / c # to achieve sse Call, if you encounter difficulties in this regard can refer to. In addition, when calling sse, it is best to monitor the long link in order to restart the long link after an error or unexpected stop, or other operation.',
            'connState-Tip-p1': '<b>Interface Description:</b>This interface is sse long link, when the Bluetooth gateway on the Bluetooth device connection status changes (connection is successful or disconnected), will be notified through this interface to the pc side of the message.',
            'scan-Tip-p1': `<b>Interface Description:</b>This interface is the sse long-link call interface, Bluetooth gateway will scan the surrounding devices, and the Bluetooth device's MAC address (bdaddr), broadcast type (bdaddrType) broadcast data (adData / scanData), device name name), signal strength (rssi) and other information in the form of http response (the original data, see "http response" window.`,
            'scan-Tip-p2': '<b>Parameters: chip: </b>Bluetooth gateway has two chips, chip 0 and chip 1, when calling the interface can be added by adding queryString chip (? Chip = 0 or chip = 1), if you do not fill, the default chip 0 Scan, chip 0 scanning distance will be better than chip 1, it is recommended to use chip 0 scan under normal circumstances.',
            'write-Tip-p1': '<b>Interface Description:</b>This interface is responsible for communicating with the main interface of the device. It is responsible for writing instructions to the Bluetooth device and opening the notification / indication of the Bluetooth device. The following describes how to implement the two functions.',
            'write-Tip-p2': '<b>1、Write command to bluetooth device:</b>When it needs to write the command to the Bluetooth device in the specified characteristic, it first calls the interface of "find service", after returning to the tree list of the bluetooth device service information, look for the corresponding characteristic valueHandle (property contains handle, valueHandle, properties, descriptors and other attributes), and then call this interface, the handle corresponding value is characteristic valueHandle value corresponding value is the need to write the contents of the instruction Spell together written as a string).',
            'write-Tip-p3': '<b>2、open the Bluetooth device notification / indication: </b>When you need to receive the data sent by the Bluetooth device, you need to open the notification or indication of the Bluetooth device (the opening process is essentially an instruction issued by the Bluetooth device), when needed Open the notification or indication of the specified characteristic, it is also called the "discovery service" method to find the descriptors corresponding to the specified characteristic, open the descriptors, find uuid contains "00002902" corresponding to the handle, and then call this interface, the interface The handle is the handle of the above descriptor. If it is open, the value corresponds to "0100". If the indication is on, the value corresponds to "0200". If the notification / indication is off, the value corresponds to "0000".',
            'write-Tip-p4': '<b><b>Parameter Explanation: deviceMac:</b>MAC address of the device to write the instruction.',
            'write-Tip-p5': '<b>handle：</b>The valueHandle or handle corresponding to the characteristic found through the Discovery Service Interface.',
            'write-Tip-p6': '<b>value：</b>The value of the command to be written, or "0100" (open notification), "0200" (open indication), "0000" (close notification and indication).',
            'write-Tip-p7': ' <b>handle & value Input format</b>',
            'write-Tip-p8': 'Single instruction format handle: value1, type',
            'write-Tip-p9': 'handle to write the handle as 20',
            'write-Tip-p10': 'value1 is the value to be written (hex)',
            'write-Tip-p11': 'type is write type, 0 means write without response, and 1 means write with response',
            'write-Tip-p12': 'Use a carriage-return between the multiple statements',
            'wiki': 'SDK Guide',
            'new-version': 'New Version(Beta)',
            'adType': 'Adv Type:',
            'adData': 'Adv Data:',
            'adRespData': 'Resp Data:',
            'adChannelmap': 'Channel:',
            'adInterval': 'Adv Interval:',
            'adChip': 'Chip',
            'adTypeDesc': 'Advertising type. ADV_IND-Connectable undirected, ADV_DIRECT_IND-Connectable directed, ADV_SCAN_IND-Scannable undirected, ADV_NONCONN_IND-Non connectable undirected, SCAN_RSP-Scan Response',
            'adDataDesc': 'Advertise package, the data type is string.',
            'adRespDataDesc': 'Scan response package. The data type is string. When you want to send resp_data, please set ad type ADV_IND',
            'adChannelmapDesc': 'Channel used for advertise, default value 7',
            'adIntervalDesc': 'Advertising interval in ms. Default value 500ms.',
            'adChipDesc': 'The chip used for broadcasting, 0-chip 0, 1-chip 1, pay attention to whether the gateway has multiple chips'
        },
        ru = {
            'control':'Контроль',
            'local':'Локальный',
            'remote':'Удаленный',
            '_lang': 'ru',
            'lang': 'Язык',
            'title': 'Инструмент отладки Bluetooth Cassia',
            'header': 'Инструмент отладки Bluetooth Cassia',
            'reboot': 'Перезагрузить',
            'allApi': 'Информация об API',
            'firstCode':'Сначала создайте пару',
            'sm':'Сканировать',
            'sb':'Устройство',
            'lj':'Подключить',
            'unpair':'Разорвать пару',
            'pairInput':'Парный ввод',
            'pair':'Пара',
            'Pair':'Пара',
            'Unpair':'Разорвать пару',
            'Seri':'Сервисы',
            'Disc':'Отключить',
            'pair_input':'Парный_ввод',
            'ylj':'Подключено',
            'fx':'Обнаружить',
            'fw':'Сервисы',
            'sb-fw':'Устройство',
            'connDeviceLog':'Подключить устройство',
            'connedDeviceLog':'Подключенные устройства',
            'writeComLog':'Написать инструкцию',
            'readComLog':'Прочитайте инструкцию',
            'router-mac':'MAC-адрес маршрутизатора',
            'router-ip':'IP-адрес маршрутизатора',
            'openHub':'Открытый маршрутизатор',
            'notify':'Уведомление',
            'connDevice': 'Подключить устройство',
            'connedDevice': 'Подключенные устройства',
            // 'connectedNum':'подключенный номер: ',
            'scanDevice': 'Устройство сканирования',
            'openNotify': 'Уведомление об открытии маршрутизатора',
            'stateChange': 'Изменения состояния подключения',
            'writeCom': 'Написать инструкцию',
            'readCom': 'Прочитайте инструкцию',
            // 'stateChangeNotify': 'Уведомление об изменении состояния подключения',
            'discoverServices': 'Откройте службы устройств',
            'dk':'Открыто',
            'router':'Маршрутизатор',
            'tz':'Уведомить',
            'xr':'Написать',
            'zl':'Инструкция',
            'ljj':'Соединение',
            'zt':'Состояние',
            'bh':'Изменения',
            'getCond':'Подключено',
            'disCon': 'Отключить',
            'scanList': 'Список сканирования',
            'startScan': 'Начать сканирование',
            'devcieAndService': 'Список устройств и служб',
            // 'getList': 'Подключенные устройства',
            'co-st':'Состояние подключения',
            'ch-no':'Уведомление',
            'notifyList': 'Список уведомлений',
            // 'openHubNotify': 'Уведомление об открытии маршрутизатора',
            'clearList': 'Очистить список',
            'apiSocket': 'Интерфейсы API',
            'scanResult': 'Результаты сканирования',
            'disService': 'Откройте услуги',
            'getMsg': 'Сообщения устройств',
            'deviceConStateChange': 'Изменения состояния',
            'arguments': 'Параметр',
            'optional': '(Необязательный)',
            'required': '(Обязательно)',
            'description': 'Описание',
            'hubNotifyStatus': 'Статус уведомления маршрутизатора',
            'method': 'Метод',
            'addMore': 'Добавить еще',
            'username':'Имя пользователя:',
            'password':'Пароль:',
            'pleaseCode':'Пожалуйста, введите код пары',
            'host':'Адрес сервера AC:',
            'yes':'Да',
            'input':'Импорт',
            'close':'Закрыть',
            'cond':'Подключено',
            'num':'Число:',
            'interfaceURL':'<b>URL интерфейса:</b>вызывая интерфейс, этот URL автоматически создается в окне ниже "Интерфейс API".',
            'oAouh-Tip-p2':'<b>Описание интерфейса:</b>Этот интерфейс достигается за счет удаленного управления облаком oAuth2.0. Имя пользователя и пароль для кодировки base64 добавлены в параметры запроса, доступ через 1 час после успешной аутентификации токена доступа, вы можете добавить параметры токена доступа к другому API, чтобы добиться удаленного управления.',
            'oAouh-Tip-p3':'<b>Параметр Описание: Имя пользователя / Пароль:</b>Учетные данные разработчика, запрошенные от Cassia (будут добавлены в запрос как кодировка base64).',
            'oAouh-Tip-p4':'<b>Адрес AC: </b>Адрес AC-сервера, который взаимодействует с маршрутизатором Bluetooth.',
            'connectList-Tip-p2': '<b>Описание интерфейса:</b>Этот интерфейс представляет собой запрос GET. После вызова интерфейса Bluetooth-маршрутизатор вернет на сторону ПК список подключенных в данный момент устройств.',
            'connect-Tip-p1': '<b>микросхема：</b>В маршрутизаторе Bluetooth есть две микросхемы: микросхема 0 и микросхема 1, при вызове интерфейса вы можете выбрать микросхему (Микросхема = 0 или Микросхема = 1), добавив строку запроса, и ограничение подключений каждой микросхемы до 20 устройств для роутера E1000. Без этого параметра Bluetooth-роутер автоматически подбирает чип по количеству подключений.',
            'connect-Tip-p2': '<b>Устройство MAC：</b>MAC-адрес устройства для подключения.',
            'pair-Tip-p2': '<b>Устройство MAC：</b>MAC-адрес устройства для сопряжения.',
            'connect-Tip-p3': `<b>Тип：</b>Этот параметр является обязательным в теле. MAC-адреса Bluetooth-устройств делятся на случайные и публичные, поэтому при подключении устройств нужно указать тип трансляции устройства, его можно получить из данных сканирования.`,
            'disconn-Tip-p2': '<b>Описание интерфейса:</b>После вызова интерфейса Bluetooth-роутер будет отключен от Bluetooth-устройства с указанным MAC-адресом.</p>',
            'disconn-Tip-p3': '<b>Параметр Описание: устройство MAC:</b> MAC-адрес отключаемого устройства. </p>',
            'unpair-Tip-p2': '<b>Описание интерфейса:</b>После вызова интерфейса Bluetooth-маршрутизатор будет отключен от Bluetooth-устройства с указанным MAC-адресом.</p>',
            'unpair-Tip-p3': '<b>Параметр Пояснение: устройство MAC:</b> MAC-адрес устройства, для которого нужно отключить. </p>',
            'services-Tip-p1': `<b>Описание интерфейса: </b>Этот интерфейс представляет собой запрос GET. После вызова интерфейса Bluetooth-маршрутизатор запросит у указанного Bluetooth-устройства древовидный список его службы. Основная цель вызова вторичного интерфейса - получить чтение / значение устройства Bluetooth, соответствующее дескриптору значения или дескриптору.`,
            'services-Tip-p2': '<b>Параметр Пояснение: устройство MAC:</b>MAC-адрес устройства, на котором должен быть запрошен список услуг.',
            'notify-Tip-p1': '<b>Описание интерфейса: </b>Этот интерфейс представляет собой длинную ссылку, когда вы открываете устройство Bluetooth для уведомлений / индикации, устройство Bluetooth отправляет сообщение на маршрутизатор Bluetooth, но если вы хотите получить это сообщение на ПК, вам также необходимо вызвать этот интерфейс, чтобы установить Маршрутизатору Bluetooth Путь данных к компьютеру, так что маршрутизатор Bluetooth будет получать данные устройства Bluetooth, перенаправляется на сторону компьютера.',
            'notify-Tip-p2': '<b>SSE：</b>События, отправленные сервером ， Короткие: см. Длинная ссылка http, запрос необходимо закрыть вручную, иначе, теоретически, ошибка не будет продолжаться, все данные будут «Данные:» в начале. Для отладки можно напрямую ввести URL-адрес sse в браузере для вызова. Но в процессе использования обычных HTTP-запросов нельзя запрашивать данные (общий HTTP-запрос возвращается после запроса всех данных), в настоящее время мы предоставляем демонстрацию iOS / java / nodejs / js / c # для достижения sse вызова, если вы столкнулись с трудностями в связи с этим можете сослаться - при вызове sse лучше всего отслеживать длинную ссылку, чтобы перезапустить длинную ссылку после ошибки, неожиданной остановки или другой операции.',
            'connState-Tip-p1': '<b>Описание интерфейса:</b>Этот интерфейс представляет собой длинную ссылку, когда Bluetooth-маршрутизатор на Bluetooth-устройстве меняет статус подключения (соединение успешно или отключено), через этот интерфейс будет отправлено уведомление на компьютерную сторону сообщения.',
            'scan-Tip-p1': `<b>Описание интерфейса:</b>Этот интерфейс представляет собой интерфейс вызова длинной ссылки sse, маршрутизатор Bluetooth будет сканировать окружающие устройства, а MAC-адрес устройства Bluetooth (bdaddr), тип широковещательной передачи (bdaddrType), широковещательные данные (adData / scanData), имя устройства), мощность сигнала (rssi ) и другую информацию в виде http-ответа (исходные данные см. в окне «http-ответ».`,
            'scan-Tip-p2': '<b>Параметры: микросхема: </b>Маршрутизатор Bluetooth имеет две микросхемы, микросхему 0 и микросхему 1, при вызове интерфейса можно добавить микросхему запроса строки (Микросхема = 0 или Микросхема = 1), если вы не заполняете, микросхему 0 по умолчанию сканирования, сканирование микросхемы 0 расстояние будет лучше, чем микросхемы 1, рекомендуется использовать сканирование микросхемы 0 при нормальных обстоятельствах.',
            'write-Tip-p1': '<b>Описание интерфейса:</b>Этот интерфейс отвечает за связь с основным интерфейсом устройства. Он отвечает за написание инструкций на устройство Bluetooth и открытие уведомления / индикации устройства Bluetooth. Ниже описывается, как реализовать две функции.',
            'write-Tip-p2': '<b>1、Записать команду на устройство Bluetooth:</b>Когда ему необходимо записать команду в устройство Bluetooth в указанной характеристике, он сначала вызывает интерфейс «службы поиска», после возврата в древовидный список служебной информации устройства Bluetooth ищет соответствующее значение характеристики дескриптора (свойство содержит дескриптор , значение дескриптора, свойства, дескрипторы и другие атрибуты), а затем вызовите этот интерфейс, дескриптор, соответствующее значение, является характеристикой значение дескриптора, соответствующее значение, необходимо записать содержимое инструкции в короткий промежуток времени вместе, записанное в виде строки).',
            'write-Tip-p3': '<b>2、открыть уведомление / индикацию устройства Bluetooth: </b>Когда вам нужно получить данные, отправленные устройством Bluetooth, вам необходимо открыть уведомление или индикацию устройства Bluetooth (процесс открытия, по сути, является инструкцией, выданной устройством Bluetooth), при необходимости Откройте уведомление или индикацию указанного характеристика, он также называется методом «службы обнаружения», чтобы найти дескрипторы, соответствующие указанной характеристике, открыть дескрипторы, найти uuid, содержащий «00002902», соответствующий дескриптору, и затем вызвать этот интерфейс. Дескриптор - это дескриптор вышеупомянутого дескриптора. Если он открыт, значение соответствует «0100». Если индикация горит, значение соответствует «0200». Если уведомление / индикация выключена, значение соответствует «0000».',
            'write-Tip-p4': '<b><b>Параметр Пояснение: устройство MAC:</b>MAC-адрес устройства для записи инструкции.',
            'write-Tip-p5': '<b>дескриптор：</b>Значение Дескриптора или дескриптор, соответствующее характеристике, найденной через интерфейс службы обнаружения.',
            'write-Tip-p6': '<b>значение：</b>Значение записываемой команды или «0100» (открытое уведомление), «0200» (открытое указание), «0000» (закрытое уведомление и указание).',
            'write-Tip-p7': ' <b>дескриптор и значение Формат ввода</b>',
            'write-Tip-p8': 'Дескриптор формата одиночной инструкции: значение1, тип ',
            'write-Tip-p9': 'дескриптор для записи дескриптора как 20',
            'write-Tip-p10': 'значение1 - это записываемое значение (шестнадцатеричное)',
            'write-Tip-p11': 'тип - это тип записи, 0 означает запись без ответа, а 1 означает запись с ответом',
            'write-Tip-p12': 'Используйте возврат ползунка между несколькими операторами',
            'wiki': 'Руководство по SDK',
            'new-version': 'Новая версия (Бета)'
        },
        ro = {
            'control':'Control',
            'local':'Local',
            'remote':'De la distanta',
            '_lang': 'ro',
            'lang': 'Limba',
            'title': 'Cassia Bluetooth Debug Tool',
            'header': 'Cassia Bluetooth Debug  Tool',
            'reboot': 'Repornire',
            'allApi': ' Info API',
            'firstCode':'Intai cuplati',
            'sm':'Scanare',
            'sb':'Dispozitiv',
            'lj':'Conectare',
            'unpair':'Decuplare',
            'pairInput':'Input cuplaj',
            'pair':'Cuplare',
            'Pair':'Cuplare',
            'Unpair':'Decuplare',
            'Seri':'Servicii',
            'Disc':'Deconectare',
            'pair_input':'Input_cuplaj',
            'ylj':'Conectat',
            'fx':'Descopera',
            'fw':'Servicii',
            'sb-fw':'Dispozitiv',
            'connDeviceLog':'Conectare dispozitiv',
            'connedDeviceLog':'Dispozitive conectate',
            'writeComLog':'Scriere instructiuni',
            'readComLog':'Citire instructiuni',
            'router-mac':'MAC Gateway',
            'router-ip':'Ip Gateway',
            'openHub':'Gateway deschis',
            'notify':'Notificare',
            'connDevice': 'Conectare dispozitiv',
            'connedDevice': 'Dispozitive conectate',
            // 'connectedNum':'numar conectare: ',
            'scanDevice': 'Scanare\rDispozitiv',
            'openNotify': 'Notificare gateway deschis',
            'stateChange': 'Schimbari in starea conexiunii',
            'writeCom': 'Scriere instructiuni',
            'readCom': 'Citire instructiuni',
            // 'stateChangeNotify': 'Notificare schimbari in starea conexiunii',
            'discoverServices': 'Descopera servicii dispozitiv',
            'dk':'Deschide',
            'router':'Gateway',
            'tz':'Notifica',
            'xr':'Scrie',
            'zl':'Instructiune',
            'ljj':'Conexiune',
            'zt':'Stare',
            'bh':'Schimbari',
            'getCond':'Conectat',
            'disCon': 'Deconectare',
            'scanList': 'Lista scanari',
            'startScan': 'Start scanare',
            'devcieAndService': 'Lista dispozitive si servicii',
            // 'getList': 'Dispozitive conectate',
            'co-st':'Stare conexiune',
            'ch-no':'Notificare',
            'notifyList': 'Lista notificari',
            // 'openHubNotify': 'Notificare gateway deschis',
            'clearList': 'Sterge lista',
            'apiSocket': 'Interfete API',
            'scanResult': 'Rezultate scanare',
            'disService': 'Descopera servicii',
            'getMsg': 'Mesajele dispozitivului',
            'deviceConStateChange': 'Schimbari stare',
            'arguments': 'Parametru',
            'optional': '(optional)',
            'required': '(obligatoriu)',
            'description': 'Descriere',
            'hubNotifyStatus': 'Notificare stare gateway',
            'method': 'Metoda',
            'addMore': 'Adauga mai multe',
            'username':'Cheie utilizator:',
            'password':'Parola utilizator:',
            'pleaseCode':'Introduceti codul cuplajului',
            'host':'Adresa Server AC:',
            'yes':'da',
            'input':'input',
            'close':'inchide',
            'cond':'Conectat',
            'num':'Numar:',
            'interfaceURL':'<b>URL Interfata:</b>apeland interfata, acest URL este generat automat in fereastra de sub "Interfata API".',
            'oAouh-Tip-p2':'<b>Descriere interfata:</b>Aceasta interfata este realizata prin intermediul protocolului oAuth2.0. Cheia si parola utilizatorului la codificarea base64 au fost adaugate la parametrii request-ului, acces de 1 ora acordat dupa autentificarea cu succes cu access_token, puteti adauga parametrii access_token pentru a accesa alte API-uri, pentru a obtine control de la distanta.',
            'oAouh-Tip-p3':'<b>Explicatie parametru:Cheie utilizator / Parola utilizator:</b>Date de autentificare utilizator cerute de la Cassia (vor fi adaugate la request prin codificare base64).',
            'oAouh-Tip-p4':'<b>Adresa AC: </b>Adresa Serverului AC care interactioneaza cu routerul Bluetooth.',
            'connectList-Tip-p2': '<b>Descriere interfata:</b>Aceasta interfata este un GET request. Dupa apelarea interfetei, routerul Bluetooth va returna lista dispozitivelor conectate actual la PC.',
            'connect-Tip-p1': '<b>cip：</b>Exista doua cipuri in routerul Bluetooth, cipul 0 si cipul 1, la apelarea interfetei, puteti selecta cipul (? cip = 0 sau? cip = 1) adaugand queryString, limita de conexiuni a fiecarui cip este de 20 de dispozitive pentru routerul E1000. In lipsa acestui parametru, routerul Bluetooth va cupla automat cipul in functie de numarul de conexiuni.',
            'connect-Tip-p2': '<b>deviceMac：</b>Adresa MAC a dispozitivului cu care se stabileste conexiunea.',
            'pair-Tip-p2': '<b>deviceMac：</b>Adresa MAC a dispozitivului cu care se stabileste cuplajul.',
            'connect-Tip-p3': `<b>type：</b>Acest parametru este necesar in body. Adresele MAC ale dispozitivelor Bluetooth sunt impartite pe aleatoriu si public, astfel incat, la conectarea dispozitivelor, trebuie sa precizati tipul de difuzare al dispozitivului, ceea ce se poate obtine din datele scanate.`,
            'disconn-Tip-p2': '<b>Descriere interfata:</b>Dupa apelarea interfatei, routerul Bluetooth va fi deconectat de la dispozitivul Bluetooth cu adresa MAC specificata.</p>',
            'disconn-Tip-p3': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului care urmeaza sa fie deconectat.</p>',
            'unpair-Tip-p2': '<b>Descriere interfata:</b>Dupa apelarea interfetei, routerul Bluetooth va fi decuplat de la dispozitivul Bluetooth cu adresa MAC specificata.</p>',
            'unpair-Tip-p3': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului care urmeaza sa fie decuplat.</p>',
            'services-Tip-p1': `<b>Descriere interfata: </b>Aceasta interfata este un GET request. Dupa apelarea interfetei, routerul Bluetooth va cere de la dispozitivul Bluetooth specificat arborele serviciilor sale. Scopul principal al apelarii interfetei secundare este de a obtine citirile / valoarea dispozitivului Bluetooth, ceea ce corespunde cu valueHandle sau handle.`,
            'services-Tip-p2': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului la care se solicita lista de servicii.',
            'notify-Tip-p1': '<b>Descriere interfata: </b>Aceasta interfata foloseste o conexiune continua prin intermediul protocolului SSE, atunci cand deschideti notificarea / indicatiile dispozitivului Bluetooth, dispozitivul Bluetooth va raporta mesajul catre routerul Bluetooth, insa, daca doriti sa primit acest mesaj pe PC, va trebui sa apelati aceasta interfata pentru a stabili calea de date de la routerul Bluetooth catre PC, astfel incat datele primite de catre routerul Bluetooth de la dispozitivul Bluetooth sa fie transmise catre PC.',
            'notify-Tip-p2': '<b>SSE：</b>Server-Sent Events (SSE) este o tehnologie care permite clientului sa primeasca update-uri automate de la un server (gateway) prin conexiune HTTP. Utilizatorul poate, de asemenea, sa introduca URL-ul de SEE direct in web browser, pentru a primi un flux de events (ex. mesaje de notificare de la dispozitiv). Fiecare event incepe cu “data:” la inceputul fiecarei linii. La fiecare 30 de secunde, se trimite un mesaj de mentinere (keep-alive) de la server catre client, in SSE. Odata realizata, conexiunea SSE se mentine pana cand este oprita manual. Utilizatorul trebuie sa mentina o conexiune continua prin HTTP, si sa monitorizeze aceasta mentinere (keep-alive) in SSE. Utilizatorul sa nu deschida/inchida SEE prea frecvent, nici sa creeze prea multe conexiuni SSE, pentru ca altfel routerul poate returna eroare HTTP 502, daca numarul conexiunilor SSE pe gateway atinge limita de 32. Utilizand HTTP obisnuit, request-urile nu pot solicita date (un http request generic este returnat dupa solicitarea tuturor datelor), actualmente oferim un demo iOS / java / nodejs / js / c # pentru efectuarea apelului SSE, daca intampinati dificultati, va puteti referi la acesta. In plus, la apelarea SSE, este recomandat sa se monitorizeze conexiunea continua, pentru a o reporni in cazul unei erori sau opriri neasteptate sau altor operatiuni.',
            'connState-Tip-p1': '<b>Descrierea interfetei:</b>Aceasta interfata foloseste o conexiune continua prin intermediul protocolului SSE, atunci cand se modifica starea conexiunii routerului Bluetooth de pe dispozitivul Bluetooth (conexiunea s-a efectuat cu succes sau s-a deconectat), acest lucru va fi comunicat catre PC prin aceasta interfata.',
            'scan-Tip-p1': `<b>Descrierea interfetei:</b>Aceasta este o interfata de apel cu conexiune continua prin protocolului SSE, routerul Bluetooth va scana dispozitivele din apropiere, impreuna cu adresa MAC (bdaddr), tipul de difuzare (bdaddrType), datele difuzate (adData / scanData), numele dispozitivului (name), puterea semnalului (rssi) si alte informatii sub forma http-response (datele originale, vezi fereastra "http response".`,
            'scan-Tip-p2': '<b>Parametrii: cip: </b>Routerul Bluetooth are doua cipuri, cipul 0 si cipul 1, la apelarea interfetei, acestea pot fi adaugate prin intermediul queryString cip (? cip = 0 sau cip = 1), daca lasati necompletat, se va scana cu cipul 0 (default), distanta de scanare cu cip 0 este mai buna decat cu cip 1, in circumstante normale, se recomanda scanarea cu cipul 0.',
            'write-Tip-p1': '<b>Descrierea interfetei:</b>Aceasta interfata este responsabila de comunicarea cu interfata principala a dispozitivului. Este responsabila de scrierea instructiunilor catre dispozitivul Bluetooth si de deschiderea notificarilor / indicatiilor dispozitivului Bluetooth. Mai jos gasiti instructiunile pentru implementarea acestor doua functii.',
            'write-Tip-p2': '<b>1、Scrie comanda catre dispozitivul Bluetooth:</b>La scrierea comenzilor catre dispozitivul Bluetooth cu caracteristici specifice, prima data se apeleaza interfata "gasire service", dupa care se revine la arborele serviciilor de informatii ale dispozitivului Bluetooth, gasiti caracteristica corespunzatoare valueHandle (property-ul contine handle, valueHandle, property-uri, descriptori si alte atribute), dupa care apelati aceasta interfata, de ex. pentru handle “37”, pentru a deschide notificarea cu API-ul de scriere, setati valoarea la "0100"; pentru a deschide indicatia, setati valoare la "0200"; pentru a inchide notificarile / indicatiile, setati valoarea la "0000" (37, 0100, 0200 si 0000 sunt exemple).',
            'write-Tip-p3': '<b>2、deschideti notificarile / indicatiile dispozitivului Bluetooth: </b>Pentru a primi datele trimise de catre dispozitivul Bluetooth, trebuie sa deschideti notificarile sau indicatiile dispozitivului Bluetooth (procedura de deschidere este defapt o instructiune emisa de dispozitivul Bluetooth), la nevoie, deschideti notificarile sau indicatiile caracteristicilor specificate, acest lucru se mai numeste si metoda "servicii de descoperire" pentru gasirea descriptorilor care corespund caracteristicii specificate, deschideti descriptorii, gasiti uuid continand "00002902" corespunzator handle-ului, apoi apelati aceasta interfata, handle-ul este cel al descriptorului de mai sus. Daca este deschis, valoarea corespunde cu "0100". Daca indicatia este pornita, valoarea corespunde cu "0200". Daca notificarea / indicatia este oprita, valoarea corespunde cu "0000".',
            'write-Tip-p4': '<b><b>Explicatia parametrului: deviceMac:</b>Adresa MAC a dispozitivului la care se vor scrie instructiunile.',
            'write-Tip-p5': '<b>handle：</b>valueHandle sau handle corespunzand caracteristicii gasite prin Interfata Serviciilor de Descoperire.',
            'write-Tip-p6': '<b>value：</b>Valoarea comenzii care va fi scrisa, sau "0100" (deschidere notificari), "0200" (deschidere indicatii), "0000" (inchidere notificari si indicatii).',
            'write-Tip-p7': ' <b>Formatul inputului pentru handle si valoare</b>',
            'write-Tip-p8': 'Formatul instructiunii unice handle: value1, type',
            'write-Tip-p9': 'handle pentru a scrie handle 20',
            'write-Tip-p10': 'value1 este valoarea care va fi scrisa (hex)',
            'write-Tip-p11': 'type este tipul de scriere, 0 semnifica scriere fara raspuns, iar 1 semnifica scriere cu raspuns',
            'write-Tip-p12': 'Folositi carriage-return intre statement-uri multiple',
            'wiki': 'Ghid SDK',
            'new-version': 'Versiune Noua (Beta)'
        },
        ja = {
            'control':'コントロール',
            'local':'ローカル',
            'remote':'リモート',
            '_lang': 'ja',
            'lang': '言語',
            'title': 'Cassia Bluetooth デバッグツール',
            'header': 'Cassia Bluetooth デバッグツール',
            'reboot': 'リブート',
            'allApi': 'API 情報',
            'firstCode':'初めにペアリングしてください',
            'sm':'スキャン',
            'sb':'デバイス',
            'lj':'接続',
            'unpair':'接続解除',
            'pairInput':'接続入力',
            'pair':'ペア',
            'Pair':'ペア',
            'Unpair':'アンペア',
            'Seri':'サービス',
            'Disc':'切断',
            'pair_input':'ペア入力',
            'ylj':'接続',
            'fx':'発見',
            'fw':'サービス',
            'sb-fw':'デバイス',
            'connDeviceLog':'デバイス接続',
            'connedDeviceLog':'接続したデバイス',
            'writeComLog':'インストラクションの記入',
            'readComLog':'インストラクションを読む',
            'router-mac':'ルーターMAC',
            'router-ip':'ルーターIp',
            'openHub':'オープン Gateway',
            'notify':'通知',
            'connDevice': 'デバイス接続',
            'connedDevice': '接続下でアイス',
            // 'connectedNum':'接続した番号: ',
            'scanDevice': 'スキャン\rデバイス',
            'openNotify': 'ルーター通知を開く',
            'stateChange': '接続状態の変更',
            'writeCom': 'インストラクションを書く',
            'readCom': 'インストラクションを読む',
            // 'stateChangeNotify': '接続状況が通知を変更',
            'discoverServices': 'デバイスサービスの発見',
            'dk':'オープン',
            'router':'ルーター',
            'tz':'通知',
            'xr':'書く',
            'zl':'インストラクション',
            'ljj':'接続',
            'zt':'状態',
            'bh':'変更',
            'getCond':'接続',
            'disCon': '切断',
            'scanList': 'スキャンリスト',
            'startScan': 'スキャン開始',
            'devcieAndService': 'デバイスとサービスリスト',
            // 'getList': '接続したデバイス',
            'co-st':'接続状態',
            'ch-no':'通知',
            'notifyList': '通知リスト',
            // 'openHubNotify': 'ルータ通知をオープン',
            'clearList': 'クリアリスト',
            'apiSocket': 'Apiインターフェース',
            'scanResult': 'スキャン結果',
            'disService': 'サービス発見',
            'getMsg': 'デバイス\'sメッセージ',
            'deviceConStateChange': '状態変更',
            'arguments': 'パラメータ',
            'optional': '(オプション)',
            'required': '(要求)',
            'description': '記載',
            'hubNotifyStatus': 'ルーター通知状態',
            'method': '方法',
            'addMore': 'さらに追加',
            'username':'デベロッパーキー:',
            'password':'デベロッパーシークレット:',
            'pleaseCode':'ペアコードを入力してください',
            'host':'ACサーバーアドレス:',
            'yes':'はい',
            'input':'インポート',
            'close':'閉じる',
            'cond':'接続',
            'num':'ナンバー:',
            'interfaceURL':'<b>インターフェース URL:</b>インターフェースの呼び出し, このURLは下記ウィンドウの"APIインターフェース"で作成されます',
            'oAouh-Tip-p2':'<b>インターフェース記述:</b>このインターフェイスは、oAuth2.0クラウドのリモートコントロールを介して達成されます。開発者キーと開発者の秘密のbase64エンコーディングに要求パラメータに追加された、認証に成功した後1時間にアクセスするaccess_tokenは、リモートコントロールを達成するために、他のAPIにアクセスするaccess_tokenのパラメータを追加することができます。',
            'oAouh-Tip-p3':'<b>パラメータ説明:デヴェロッパーキー/デベロッパーシークレット:</b>Cassia から要求された開発者クレデンシャル (要求の中で base64 エンコーディングとして追加されます).',
            'oAouh-Tip-p4':'<b>AC アドレス: </b>Bluetoothルータと相互作用するACサーバのアドレス.',
            'connectList-Tip-p2': '<b>インターフェース記述:</b>このインターフェースはGETリクエストです。インターフェースを呼び出した後、Bluetoothルータは現在接続されている機器のリストをPC側に返します。',
            'connect-Tip-p1': '<b>チップ：</b>Bluetoothルータには、チップ0とチップ1の2つのチップがあり、インターフェースを呼び出すときに、あなたはqueryStringを追加することで、チップを選択することができます（? チップ=0または? チップ=1）と各チップの接続の天井は、E1000ルータの20デバイスです。このパラメータを指定しないと、Bluetoothルータは接続数に応じて自動的にチップをマッチングさせます。',
            'connect-Tip-p2': '<b>デバイスMac：</b>接続するデバイスのMACアドレス',
            'pair-Tip-p2': '<b>デバイスMac：</b>ペアするデバイスのMACアドレス',
            'connect-Tip-p3': `<b>タイプ：</b>このパラメータは本文で必須となります。BluetoothデバイスのMACアドレスはランダムとパブリックに分かれているので、デバイスを接続する際にはデバイスのブロードキャストタイプを示す必要があり、スキャンデータから取得することができます。`,
            'disconn-Tip-p2': '<b>インターフェース記述:</b>インターフェイスを呼び出した後、指定したMACアドレスのBluetooth機器からBluetoothルータが切断されます。</p>',
            'disconn-Tip-p3': '<b>パラメータ説明: デバイスMac:</b> 切断するデバイスのMACアドレス</p>',
            'unpair-Tip-p2': '<b>インターフェース記述:</b>インターフェイスを呼び出した後、指定したMACアドレスを持つBluetooth機器からBluetoothルーターが切断されます。</p>',
            'unpair-Tip-p3': '<b>パラメータ説明: デバイスMac:</b> 切断するデバイスのMACアドレス。 </p>',
            'services-Tip-p1': `<b>インターフェース記述: </b>このインタフェースはGETリクエストです。インターフェースが呼び出された後、Bluetoothルータは指定されたBluetoothデバイスに対して、そのサービスのツリーリストを要求します。二次インタフェースを呼び出す主な目的は、valueHandleまたはhandleに対応するBluetoothデバイスの読み取り/値を取得することです。`,
            'services-Tip-p2': '<b>パラメータ説明: deviceMac:</b>サービスリストを要求するデバイスのMACアドレス.',
            'notify-Tip-p1': '<b>インターフェース記述: </b>このインターフェイスはSSEロングリンクで、通知/表示Bluetoothデバイスを開くと、BluetoothデバイスはBluetoothルータにメッセージを報告しますが、あなたがPC上でこのメッセージを受信したい場合は、また、PC側に転送されたBluetoothデバイスのデータを受信するように、BluetoothルータがPC側に転送されるように、PC側へのBluetoothルータのデータパスを確立するために、このインターフェイスを呼び出す必要があります。',
            'notify-Tip-p2': `<b>SSE：</b>Server-Sent Events (SSE)は、HTTP接続を介してサーバ(ルータ)からの自動更新をクライアントが受信することを可能にするサーバプッシュ技術です。また、ユーザーは直接WebブラウザでSSEのURLを入力して、イベントのストリーム（例えば、デバイスからの通知メッセージ）を取得することができます。各イベントは、各行の先頭に "data: "で始まります。30秒ごとに、SSE内のサーバからクライアントにキープアライブメッセージが送信されます。確立後のSSE接続は、手動で閉じない限り持続します。ユーザーはHTTP persistent connectionを維持し、SSEの'keep-alive'を監視する必要があります。ユーザーは非常に頻繁に SSE を開け、閉めるべきではないですまたは余りに多くの SSE の関係を作成して下さい、そうでなければルーターはルーターの SSE の関係の数が 32 の限界に達すれば HTTP 502 のエラーを返すかもしれません。通常のHTTP要求を使用してのプロセスでは、データを要求することはできません（一般的なHTTP要求は、すべてのデータを要求した後に返されます）、我々は現在、iOS / java / nodejs / js / c＃のデモを提供するSSEコールを達成するために、この点で困難が発生した場合は、参照することができます。また、SSEを呼び出すときに、それは長いリンクを監視するために、エラーや予期せぬ停止、または他の操作の後に長いリンクを再起動するために最善の方法です。`,
            'connState-Tip-p1': '<b>Iインターフェース記述:</b>このインターフェイスは、Bluetoothデバイスの接続状態の変化（接続が成功または切断されている）のBluetoothルータは、メッセージのPC側にこのインターフェイスを介して通知されるときに、SSEロングリンクです。',
            'scan-Tip-p1': `<b>インターフェース記述:</b>このインターフェイスは、Bluetoothルータは、周囲のデバイスをスキャンし、BluetoothデバイスのMACアドレス（bdaddr）、ブロードキャストタイプ（bdaddrType）ブロードキャストデータ（adData / scanData）、デバイス名名）、信号強度（rssi）とhttp応答の形で他の情報（元のデータは、"http応答 "ウィンドウを参照してください。`,
            'scan-Tip-p2': '<b>パラメータ: チップ: </b>Bluetoothルータは、2つのチップ、チップ0とチップ1を持っており、インターフェイスを呼び出すときにqueryStringチップを追加することによって追加することができます（？ チップ= 0またはチップ= 1）、あなたが記入しない場合は、デフォルトのチップ0スキャン、チップ0スキャン距離は、チップ1よりも優れたものになりますが、それは通常の状況下でチップ0スキャンを使用することをお勧めします。',
            'write-Tip-p1': '<b>インターフェース記述:</b>このインターフェースは、デバイスのメインインターフェースとの通信を担当します。Bluetoothデバイスへの指示を書き込んだり、Bluetoothデバイスの通知/表示を開いたりする役割を担っています。以下では、この2つの機能の実装方法について説明します。',
            'write-Tip-p2': '<b>1、bluetoothデバイスにコマンドを書き込む:</b>それは指定された特性のBluetoothデバイスにコマンドを書き込む必要があるとき、それは最初に "サービスを見つける "のインターフェイスを呼び出し、Bluetoothデバイスのサービス情報のツリーリストに戻った後、対応する特性valueHandle（プロパティは、ハンドル、valueHandle、プロパティ、記述子および他の属性を含む）を探して、その後、このインターフェイスを呼び出します。 例えば、ハンドル "37 "の場合、API書き込みで通知を開くには、値を "0100 "に設定し、表示を開くには、値を "0200 "に設定し、通知/表示を閉じるには、値を "0000 "に設定します(37、0100、0200、0000は例です)。',
            'write-Tip-p3': '<b>2、Bluetoothデバイス通知を開く / 指示: </b>Bluetoothデバイスから送信されたデータを受信する必要があるときは、Bluetoothデバイスの通知または表示を開く必要があります（オープン処理は、基本的にBluetoothデバイスから発行された命令です）、必要に応じて、指定された特性の通知または表示を開き、それはまた、指定された特性に対応するディスクリプタを見つけるために "発見サービス "メソッドと呼ばれ、ディスクリプタを開き、uuidがハンドルに対応する "00002902 "が含まれていることを見つけて、このインタフェースを呼び出し、インタフェース ハンドルは、上記のディスクリプタのハンドルです。開いていれば、値は "0100 "に対応する。表示がオンであれば、値は"０２００"に対応する。通知/表示がオフの場合、値は "0000 "に対応します。',
            'write-Tip-p4': '<b><b>パラメータの説明: デバイスMac:</b>命令を書き込むデバイスのMACアドレス。',
            'write-Tip-p5': '<b>ハンドル：</b>ディスカバリーサービスインタフェースを通じて発見された特性に対応するバリューハンドルまたはハンドル。',
            'write-Tip-p6': '<b>バリュー：</b>書き込むコマンドの値、または "0100" (オープン通知), "0200"（オープン表示）、"0000"（クローズ通知・表示）。',
            'write-Tip-p7': ' <b>ハンドル&バリュー 入力フォーマット</b>',
            'write-Tip-p8': 'シングルインストラクションフォーマット　ハンドル: バリュー1, タイプ',
            'write-Tip-p9': 'ハンドル20として書き込む',
            'write-Tip-p10': 'value1に書き込まれる値（16進数)',
            'write-Tip-p11': 'タイプは書き込みタイプで、0はレスポンスなしの書き込み、1はレスポンスありの書き込みを意味します。',
            'write-Tip-p12': '複数のステートメント間でキャリッジリターンを使用する',
            'wiki': 'SDK ガイド',
            'new-version': 'New Version(Beta)'
        },
        mo = {
            'control':'Control',
            'local':'Local',
            'remote':'De la distanta',
            '_lang': 'mo',
            'lang': 'Limba',
            'title': 'Cassia Bluetooth Debug Tool',
            'header': 'Cassia Bluetooth Debug  Tool',
            'reboot': 'Repornire',
            'allApi': ' Info API',
            'firstCode':'Intai cuplati',
            'sm':'Scanare',
            'sb':'Dispozitiv',
            'lj':'Conectare',
            'unpair':'Decuplare',
            'pairInput':'Input cuplaj',
            'pair':'Cuplare',
            'Pair':'Cuplare',
            'Unpair':'Decuplare',
            'Seri':'Servicii',
            'Disc':'Deconectare',
            'pair_input':'Input_cuplaj',
            'ylj':'Conectat',
            'fx':'Descopera',
            'fw':'Servicii',
            'sb-fw':'Dispozitiv',
            'connDeviceLog':'Conectare dispozitiv',
            'connedDeviceLog':'Dispozitive conectate',
            'writeComLog':'Scriere instructiuni',
            'readComLog':'Citire instructiuni',
            'router-mac':'MAC Gateway',
            'router-ip':'Ip Gateway',
            'openHub':'Gateway deschis',
            'notify':'Notificare',
            'connDevice': 'Conectare dispozitiv',
            'connedDevice': 'Dispozitive conectate',
            // 'connectedNum':'numar conectare: ',
            'scanDevice': 'Scanare\rDispozitiv',
            'openNotify': 'Notificare gateway deschis',
            'stateChange': 'Schimbari in starea conexiunii',
            'writeCom': 'Scriere instructiuni',
            'readCom': 'Citire instructiuni',
            // 'stateChangeNotify': 'Notificare schimbari in starea conexiunii',
            'discoverServices': 'Descopera servicii dispozitiv',
            'dk':'Deschide',
            'router':'Gateway',
            'tz':'Notifica',
            'xr':'Scrie',
            'zl':'Instructiune',
            'ljj':'Conexiune',
            'zt':'Stare',
            'bh':'Schimbari',
            'getCond':'Conectat',
            'disCon': 'Deconectare',
            'scanList': 'Lista scanari',
            'startScan': 'Start scanare',
            'devcieAndService': 'Lista dispozitive si servicii',
            // 'getList': 'Dispozitive conectate',
            'co-st':'Stare conexiune',
            'ch-no':'Notificare',
            'notifyList': 'Lista notificari',
            // 'openHubNotify': 'Notificare gateway deschis',
            'clearList': 'Sterge lista',
            'apiSocket': 'Interfete API',
            'scanResult': 'Rezultate scanare',
            'disService': 'Descopera servicii',
            'getMsg': 'Mesajele dispozitivului',
            'deviceConStateChange': 'Schimbari stare',
            'arguments': 'Parametru',
            'optional': '(optional)',
            'required': '(obligatoriu)',
            'description': 'Descriere',
            'hubNotifyStatus': 'Notificare stare gateway',
            'method': 'Metoda',
            'addMore': 'Adauga mai multe',
            'username':'Cheie utilizator:',
            'password':'Parola utilizator:',
            'pleaseCode':'Introduceti codul cuplajului',
            'host':'Adresa Server AC:',
            'yes':'da',
            'input':'input',
            'close':'inchide',
            'cond':'Conectat',
            'num':'Numar:',
            'interfaceURL':'<b>URL Interfata:</b>apeland interfata, acest URL este generat automat in fereastra de sub "Interfata API".',
            'oAouh-Tip-p2':'<b>Descriere interfata:</b>Aceasta interfata este realizata prin intermediul protocolului oAuth2.0. Cheia si parola utilizatorului la codificarea base64 au fost adaugate la parametrii request-ului, acces de 1 ora acordat dupa autentificarea cu succes cu access_token, puteti adauga parametrii access_token pentru a accesa alte API-uri, pentru a obtine control de la distanta.',
            'oAouh-Tip-p3':'<b>Explicatie parametru:Cheie utilizator / Parola utilizator:</b>Date de autentificare utilizator cerute de la Cassia (vor fi adaugate la request prin codificare base64).',
            'oAouh-Tip-p4':'<b>Adresa AC: </b>Adresa Serverului AC care interactioneaza cu routerul Bluetooth.',
            'connectList-Tip-p2': '<b>Descriere interfata:</b>Aceasta interfata este un GET request. Dupa apelarea interfetei, routerul Bluetooth va returna lista dispozitivelor conectate actual la PC.',
            'connect-Tip-p1': '<b>cip：</b>Exista doua cipuri in routerul Bluetooth, cipul 0 si cipul 1, la apelarea interfetei, puteti selecta cipul (? cip = 0 sau? cip = 1) adaugand queryString, limita de conexiuni a fiecarui cip este de 20 de dispozitive pentru routerul E1000. In lipsa acestui parametru, routerul Bluetooth va cupla automat cipul in functie de numarul de conexiuni.',
            'connect-Tip-p2': '<b>deviceMac：</b>Adresa MAC a dispozitivului cu care se stabileste conexiunea.',
            'pair-Tip-p2': '<b>deviceMac：</b>Adresa MAC a dispozitivului cu care se stabileste cuplajul.',
            'connect-Tip-p3': `<b>type：</b>Acest parametru este necesar in body. Adresele MAC ale dispozitivelor Bluetooth sunt impartite pe aleatoriu si public, astfel incat, la conectarea dispozitivelor, trebuie sa precizati tipul de difuzare al dispozitivului, ceea ce se poate obtine din datele scanate.`,
            'disconn-Tip-p2': '<b>Descriere interfata:</b>Dupa apelarea interfatei, routerul Bluetooth va fi deconectat de la dispozitivul Bluetooth cu adresa MAC specificata.</p>',
            'disconn-Tip-p3': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului care urmeaza sa fie deconectat.</p>',
            'unpair-Tip-p2': '<b>Descriere interfata:</b>Dupa apelarea interfetei, routerul Bluetooth va fi decuplat de la dispozitivul Bluetooth cu adresa MAC specificata.</p>',
            'unpair-Tip-p3': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului care urmeaza sa fie decuplat.</p>',
            'services-Tip-p1': `<b>Descriere interfata: </b>Aceasta interfata este un GET request. Dupa apelarea interfetei, routerul Bluetooth va cere de la dispozitivul Bluetooth specificat arborele serviciilor sale. Scopul principal al apelarii interfetei secundare este de a obtine citirile / valoarea dispozitivului Bluetooth, ceea ce corespunde cu valueHandle sau handle.`,
            'services-Tip-p2': '<b>Explicatie parametru: deviceMac:</b>Adresa MAC a dispozitivului la care se solicita lista de servicii.',
            'notify-Tip-p1': '<b>Descriere interfata: </b>Aceasta interfata foloseste o conexiune continua prin intermediul protocolului SSE, atunci cand deschideti notificarea / indicatiile dispozitivului Bluetooth, dispozitivul Bluetooth va raporta mesajul catre routerul Bluetooth, insa, daca doriti sa primit acest mesaj pe PC, va trebui sa apelati aceasta interfata pentru a stabili calea de date de la routerul Bluetooth catre PC, astfel incat datele primite de catre routerul Bluetooth de la dispozitivul Bluetooth sa fie transmise catre PC.',
            'notify-Tip-p2': '<b>SSE：</b>Server-Sent Events (SSE) este o tehnologie care permite clientului sa primeasca update-uri automate de la un server (gateway) prin conexiune HTTP. Utilizatorul poate, de asemenea, sa introduca URL-ul de SEE direct in web browser, pentru a primi un flux de events (ex. mesaje de notificare de la dispozitiv). Fiecare event incepe cu “data:” la inceputul fiecarei linii. La fiecare 30 de secunde, se trimite un mesaj de mentinere (keep-alive) de la server catre client, in SSE. Odata realizata, conexiunea SSE se mentine pana cand este oprita manual. Utilizatorul trebuie sa mentina o conexiune continua prin HTTP, si sa monitorizeze aceasta mentinere (keep-alive) in SSE. Utilizatorul sa nu deschida/inchida SEE prea frecvent, nici sa creeze prea multe conexiuni SSE, pentru ca altfel routerul poate returna eroare HTTP 502, daca numarul conexiunilor SSE pe gateway atinge limita de 32. Utilizand HTTP obisnuit, request-urile nu pot solicita date (un http request generic este returnat dupa solicitarea tuturor datelor), actualmente oferim un demo iOS / java / nodejs / js / c # pentru efectuarea apelului SSE, daca intampinati dificultati, va puteti referi la acesta. In plus, la apelarea SSE, este recomandat sa se monitorizeze conexiunea continua, pentru a o reporni in cazul unei erori sau opriri neasteptate sau altor operatiuni.',
            'connState-Tip-p1': '<b>Descrierea interfetei:</b>Aceasta interfata foloseste o conexiune continua prin intermediul protocolului SSE, atunci cand se modifica starea conexiunii routerului Bluetooth de pe dispozitivul Bluetooth (conexiunea s-a efectuat cu succes sau s-a deconectat), acest lucru va fi comunicat catre PC prin aceasta interfata.',
            'scan-Tip-p1': `<b>Descrierea interfetei:</b>Aceasta este o interfata de apel cu conexiune continua prin protocolului SSE, routerul Bluetooth va scana dispozitivele din apropiere, impreuna cu adresa MAC (bdaddr), tipul de difuzare (bdaddrType), datele difuzate (adData / scanData), numele dispozitivului (name), puterea semnalului (rssi) si alte informatii sub forma http-response (datele originale, vezi fereastra "http response".`,
            'scan-Tip-p2': '<b>Parametrii: cip: </b>Routerul Bluetooth are doua cipuri, cipul 0 si cipul 1, la apelarea interfetei, acestea pot fi adaugate prin intermediul queryString cip (? cip = 0 sau cip = 1), daca lasati necompletat, se va scana cu cipul 0 (default), distanta de scanare cu cip 0 este mai buna decat cu cip 1, in circumstante normale, se recomanda scanarea cu cipul 0.',
            'write-Tip-p1': '<b>Descrierea interfetei:</b>Aceasta interfata este responsabila de comunicarea cu interfata principala a dispozitivului. Este responsabila de scrierea instructiunilor catre dispozitivul Bluetooth si de deschiderea notificarilor / indicatiilor dispozitivului Bluetooth. Mai jos gasiti instructiunile pentru implementarea acestor doua functii.',
            'write-Tip-p2': '<b>1、Scrie comanda catre dispozitivul Bluetooth:</b>La scrierea comenzilor catre dispozitivul Bluetooth cu caracteristici specifice, prima data se apeleaza interfata "gasire service", dupa care se revine la arborele serviciilor de informatii ale dispozitivului Bluetooth, gasiti caracteristica corespunzatoare valueHandle (property-ul contine handle, valueHandle, property-uri, descriptori si alte atribute), dupa care apelati aceasta interfata, de ex. pentru handle “37”, pentru a deschide notificarea cu API-ul de scriere, setati valoarea la "0100"; pentru a deschide indicatia, setati valoare la "0200"; pentru a inchide notificarile / indicatiile, setati valoarea la "0000" (37, 0100, 0200 si 0000 sunt exemple).',
            'write-Tip-p3': '<b>2、deschideti notificarile / indicatiile dispozitivului Bluetooth: </b>Pentru a primi datele trimise de catre dispozitivul Bluetooth, trebuie sa deschideti notificarile sau indicatiile dispozitivului Bluetooth (procedura de deschidere este defapt o instructiune emisa de dispozitivul Bluetooth), la nevoie, deschideti notificarile sau indicatiile caracteristicilor specificate, acest lucru se mai numeste si metoda "servicii de descoperire" pentru gasirea descriptorilor care corespund caracteristicii specificate, deschideti descriptorii, gasiti uuid continand "00002902" corespunzator handle-ului, apoi apelati aceasta interfata, handle-ul este cel al descriptorului de mai sus. Daca este deschis, valoarea corespunde cu "0100". Daca indicatia este pornita, valoarea corespunde cu "0200". Daca notificarea / indicatia este oprita, valoarea corespunde cu "0000".',
            'write-Tip-p4': '<b><b>Explicatia parametrului: deviceMac:</b>Adresa MAC a dispozitivului la care se vor scrie instructiunile.',
            'write-Tip-p5': '<b>handle：</b>valueHandle sau handle corespunzand caracteristicii gasite prin Interfata Serviciilor de Descoperire.',
            'write-Tip-p6': '<b>value：</b>Valoarea comenzii care va fi scrisa, sau "0100" (deschidere notificari), "0200" (deschidere indicatii), "0000" (inchidere notificari si indicatii).',
            'write-Tip-p7': ' <b>Formatul inputului pentru handle si valoare</b>',
            'write-Tip-p8': 'Formatul instructiunii unice handle: value1, type',
            'write-Tip-p9': 'handle pentru a scrie handle 20',
            'write-Tip-p10': 'value1 este valoarea care va fi scrisa (hex)',
            'write-Tip-p11': 'type este tipul de scriere, 0 semnifica scriere fara raspuns, iar 1 semnifica scriere cu raspuns',
            'write-Tip-p12': 'Folositi carriage-return intre statement-uri multiple',
            'wiki': 'Ghid SDK',
            'new-version': 'Versiune Noua (Beta)'
        },
 




        lang = {},
        i18n = function (k) {
            return lang[k] || null;
        },
        auto = function () {
            var bl = (navigator.language || navigator.browserLanguage).toLowerCase();
            if (bl.match('cn')) lang = cn;
            else if (bl.match('ru')) lang = ru;
            else if (bl.match('ja')) lang = ja;
            else if (bl.match('ro')) lang = ro;
            else if (bl.match('mo')) lang = mo;
            else lang = en;
        };

    /* auto select language form settings */
    if (typeof language === 'undefined') {
        try {
            var s = JSON.parse(localStorage.getItem('settings'));
            if (!s.language || s.language === 0) {
                auto();
            } else {
                if (s.language === 'cn') lang = cn;
                else if (s.language === 'ru') lang = ru;
                else if (s.language === 'ja') lang = ja;
                else if (s.language === 'ro') lang = ro;
                else if (s.language === 'mo') lang = mo;
                else lang = en;
            }
        } catch (e) {
            auto()
        }
    } else if (language === 'cn') {
        lang = cn;
    } else if (language === 'ru') {
        lang = ru;
    } else if (language === 'ja') {
        lang = ja;
    } else if (language === 'ro') {
        lang = ro;
    } else if (language === 'mo') {
        lang = mo;
    } else {
        lang = en;
    }

    i18n.render = function () {
        globalData.lang = lang._lang
        console.warn('current language', globalData.lang)

        $('#lang option').removeAttr('checked')
        $('#lang').val(globalData.lang)

        setTimeout(function () {
            var a = document.getElementsByTagName('*'),
                t, s;
            for (var i in a) {
                t = a[i];
                if (t && t.getAttribute) {
                    s = t.getAttribute('i18n');
                    // console.log('#######', t.getAttribute('i18n-loaded') !== globalData.lang)
                    if (s && i18n(s) && t.getAttribute('i18n-loaded') !== globalData.lang) {
                        t.innerHTML = i18n(s);
                        t.setAttribute('i18n-loaded', globalData.lang);
                    }
                }
            }
            cb&&cb()
        }, 25);
    };
    i18n.render();
    return i18n
}

export default i18n